{"version":3,"file":"vue.js","sources":["../src/utils.js","../src/gloablAPI.js","../src/observe/array.js","../src/observe/dep.js","../src/observe/index.js","../src/state.js","../src/compiler/parse.js","../src/compiler/index.js","../src/observe/watcher.js","../src/vdom/index.js","../src/lifecycle.js","../src/init.js","../src/index.js"],"sourcesContent":["const starts = {};\r\nconst LIFECYE = ['beforeCreate', 'created'];\r\nLIFECYE.forEach(hook => {\r\n    starts[hook] = function (p, c) {\r\n        if (c) {\r\n            if (p) {\r\n                return p.concat(c)\r\n            } else {\r\n                return [c]\r\n            }\r\n        } else {\r\n            return p;\r\n        }\r\n    }\r\n})\r\nexport function mergeOptions(parent, child) {\r\n    const options = {};\r\n    for (let key in parent) {\r\n        mergeField(key)\r\n    }\r\n\r\n    for (let key in child) {\r\n        if (!parent.hasOwnProperty(key)) {\r\n            mergeField(key)\r\n        }\r\n    }\r\n\r\n    function mergeField(key) {\r\n        // 策略模式减少ifelse\r\n        if (starts[key]) {\r\n            options[key] = starts[key](parent[key], child[key])\r\n        } else {\r\n            options[key] = child[key] || parent[key]\r\n        }\r\n    }\r\n\r\n    return options;\r\n}","import { mergeOptions } from \"./utils\"\r\nexport function initGloablApi(Vue) {\r\n    Vue.options = {}\r\n\r\n    Vue.mixin = function (mixin) {\r\n        // 将用户选项和全局options合并\r\n        this.options = mergeOptions(this.options, mixin)\r\n        return this;\r\n    }\r\n}\r\n","// 重写数组中部分方法\r\n\r\n// 获取数组的原型\r\nlet oldArrayProto = Array.prototype;\r\n// newArrayProto.__proto__ === oldArrayProto\r\nexport let newArrayProto = Object.create(oldArrayProto)\r\n// 找到所有变异方法\r\nlet methods = [\r\n  'pop',\r\n  'push',\r\n  'unshift',\r\n  'shift',\r\n  'reverse',\r\n  'sort',\r\n  'splice'\r\n]\r\n\r\nmethods.forEach( method => {\r\n  newArrayProto[method] = function(...args) {   // 重写数组方法\r\n    const result = oldArrayProto[method].call(this, ...args)   // 内部调用原来的方法，函数劫持，切片编程, 谁调用方法this指向谁\r\n    // 对新增的数据再次进行劫持\r\n    let inserted;\r\n    let ob = this.__ob__;\r\n    switch(method) {\r\n      case 'push':\r\n      case 'unshift':\r\n        inserted = args;\r\n        break\r\n      case 'splice':\r\n        inserted = args.slice(2)  // arr.splice(0,1,{},{})    第一个参数位置。第二个参数个数，后面为新增参数slice(2)获取。\r\n      }\r\n      // 对新增数组进行观测\r\n      if(inserted) {\r\n        // 观测数组新增的每一项\r\n        ob.observeArray(inserted)\r\n      }\r\n    return result;\r\n  }\r\n})","let id = 0;\r\nclass Dep {\r\n    constructor() {\r\n        this.id = id++; // 属性的dep要收集watcher\r\n        this.subs = []; // 存放当前属性对应的watcher\r\n    }\r\n\r\n    depend() {\r\n        // 这里不希望放置重复的watcher  dep -> watcher\r\n        // watcher记录dep\r\n        Dep.target.addDep(this) // 让watcher记住dept\r\n    }\r\n\r\n    addSub(watcher) {\r\n        this.subs.push(watcher)\r\n    }\r\n\r\n    notifi() {\r\n        this.subs.forEach(watcher => watcher.update()); // 通知watcher要更新\r\n    }\r\n}\r\nDep.target = null;\r\n\r\nexport default Dep;","import { newArrayProto } from './array'\r\nimport Dep from \"./dep\"\r\nclass Observer {\r\n  constructor(data) {\r\n    // 将Observer实例赋到data自定义属性上。在劫持数组方法时拿到observeArray进行观测;也给数据加了一个标识,如果数据有__ob__,则说明改数据被劫持过了。\r\n    data.__ob__ = this;\r\n    // 给对象添加__ob__属性后，循环的时候会再次循环__ob__，形成死循环；将__ob__变成不可枚举\r\n    Object.defineProperty(data,'__ob__',{\r\n      value:this,\r\n      enumerable: false,   // 将__ob__变成不可枚举的（循环的时候无法获取）\r\n    });\r\n    // 如果是数组，重写数组方法，7个变异方法(能改变原数组)\r\n    if(Array.isArray(data)) {\r\n      // 保留数组原有特性，重写部分原型链方法\r\n      data.__proto__ = newArrayProto;\r\n      // 数组中引用类型也要进行劫持\r\n      this.observeArray(data)\r\n    } else {\r\n      // Object.defineProperty只能劫持已经存在的属性，新增或删除的是不知道的（vue2bug，为此单独写一些api，如$set,$delete）\r\n      this.walk(data)\r\n    }\r\n  }\r\n  // 循环对象，对属性依次劫持\r\n  walk(data) {\r\n    // 重新定义属性，相当于重写，性能瓶颈\r\n    Object.keys(data).forEach(key => defineReactive(data, key, data[key]))\r\n  }\r\n  // 观测数组每一项\r\n  observeArray(data) {\r\n    data.forEach(item => observe(item))\r\n  }\r\n}\r\n\r\n// 对数据做响应式处理  闭包\r\nexport function defineReactive(target, key, value) {\r\n  observe(value) // 递归对所有对象都进行属性劫持\r\n  let dep = new Dep(); // 给每个属性添加dep，做依赖收集\r\n  Object.defineProperty(target,key, {\r\n    get() {   // 用户取值走get方法\r\n      // 页面渲染的时候会调用render函数，进行取值，依赖收集，没渲染的则不触发getter\r\n      if(Dep.target) {\r\n        dep.depend(); // 让这个属性的收集器记住当前的watcher\r\n      }\r\n      return value;\r\n    },\r\n    set(newValue) {  // 用户设置值走set方法\r\n      if(newValue === value) return;\r\n      observe(newValue) // 递归对所有对象都进行属性劫持\r\n      value = newValue;\r\n\r\n      dep.notifi(); // 通知更新\r\n    }\r\n  })\r\n}\r\n\r\nexport function observe(data) {\r\n  // 对对象进行劫持\r\n  if(typeof data !== 'object' || data == null) {\r\n    return;  // 只对对象进行劫持\r\n  }\r\n  // 数据被劫持过了，直接返回data.__ob__\r\n  if(data.__ob__ instanceof Observer) {\r\n    return data.__ob__;\r\n  }\r\n  // 如果一个对象已经被劫持过，则不需要再进行劫持（判断是否被劫持过，新增一个实例来进行判断）\r\n  return new Observer(data);\r\n}","import { observe } from \"./observe/index.js\";\r\n\r\nexport function initState(vm) {\r\n  const opts = vm.$options;\r\n  if(opts.data) {\r\n    initData(vm)\r\n  }\r\n}\r\n\r\nfunction initData(vm) {\r\n  let data = vm.$options.data;  // data可能是函数或者对象\r\n  data = typeof data === 'function' ? data.call(vm) : data\r\n  vm._data= data;\r\n  // 数据放在实例上，进行观测\r\n  observe(data)\r\n\r\n  //将vm._data用vm代理\r\n  for(let key in data) {\r\n    proxy(vm, '_data', key)\r\n  }\r\n}\r\n\r\nfunction proxy(vm, target, key) {\r\n  Object.defineProperty(vm, key, {\r\n    get() {\r\n      return vm[target][key]\r\n    },\r\n    set(newValue) {\r\n      vm[target][key] = newValue\r\n    }\r\n  })\r\n}","// 模板编译\r\nconst ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`;\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`;\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`)  //匹配到的分组为标签名 <xxx\r\n\r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`); // 匹配结束标签  </xxx>\r\n\r\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^\\s\"'=<>']+)))?/;  // 匹配属性  xxx=\"xxx\"  xxx='xxx' xxx=xxx  第一个分组是属性， 分组三，四，五为值\r\n\r\nconst startTagClose = /^\\s*(\\/?)>/;  // 开始标签的结束\r\n\r\n// 利用栈形结构构造sat语法书\r\nexport function parsHTML(html) {\r\n  const ELEMENT_TYPE = 1; // 元素类型\r\n  const TEXT_TYPE = 3; // 文本类型\r\n  const stack = []; // 用于存放元素的\r\n  let currentParent; // 指向栈中最后一个\r\n  let root;\r\n  // 最终转化为一棵抽象语法树\r\n  // 栈中的最后一个元素就是当前匹配标签的父级\r\n  function createASTElement(tag, attrs) {\r\n    return {\r\n      tag,\r\n      type:ELEMENT_TYPE,\r\n      children: [],\r\n      attrs,\r\n      parent: null,\r\n    }\r\n  }\r\n\r\n  function start(tag, attrs) {\r\n    let node = createASTElement(tag, attrs); // 创建一个ast节点\r\n    if (!root) {   // 看一下是否是空树\r\n      root = node\r\n    }\r\n    if (currentParent) {\r\n      node.parent = currentParent;\r\n      currentParent.children.push(node)\r\n    }\r\n    stack.push(node);\r\n    currentParent = node; // currentParent为栈中最后一个\r\n    // console.log(\"开始标签\", tag, attrs);\r\n  }\r\n  function chars(text) { // 文本直接放到当前指向的节点中\r\n    text = text.replace(/\\s/g, '')\r\n    text && currentParent.children.push({\r\n      type: TEXT_TYPE,\r\n      text,\r\n      parent: currentParent,\r\n    })\r\n    // console.log(\"文本\", text);\r\n  }\r\n  function end(tag) {\r\n    stack.pop(); // 结束标签弹出最后一个\r\n    currentParent = stack[stack.length - 1] // 更新currentParent\r\n    // console.log(\"结束标签\", tag);\r\n  }\r\n  function addvance(n) {\r\n    html = html.substring(n)\r\n  }\r\n  function parsStartTag() {\r\n    const start = html.match(startTagOpen);\r\n    if(start) {\r\n      const match = {\r\n        tagName: start[1], // 标签名\r\n        attrs: []\r\n      }\r\n      // 匹配过的进行删除\r\n      addvance(start[0].length);\r\n      // 如果不是开始标签的结束，就是属性，一直匹配\r\n      let attr,end;\r\n      while(!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\r\n        addvance(attr[0].length);\r\n        // 添加属性\r\n        match.attrs.push({name:attr[1], value:attr[3] || attr[4] || attr[5]})\r\n      }\r\n      if(end) {\r\n        addvance(end[0].length)\r\n      }\r\n      return match;\r\n    }\r\n    return false;\r\n  };\r\n  while(html) {\r\n    // 如果textEnd为0，则说明是开始或结束标签，如果大于0，则说明就是文本的结束位置\r\n    let textEnd = html.indexOf('<');  // 如果indexOf中的索引是0，则说明是个标签\r\n    if(textEnd == 0) {\r\n      // 处理开始标签\r\n      const startTagMatch = parsStartTag()\r\n      if(startTagMatch) { // 解析开始标签\r\n        start(startTagMatch.tagName, startTagMatch.attrs)\r\n        continue;\r\n      }\r\n      // 处理结束标签\r\n      let endTagMatch = html.match(endTag);\r\n      if(endTagMatch) {\r\n        end(endTagMatch.tagName)\r\n        addvance(endTagMatch[0].length);\r\n        continue;\r\n      }\r\n    }\r\n    // 处理文本\r\n    if(textEnd > 0) {\r\n      let text = html.substring(0, textEnd)\r\n      if(text) {\r\n        chars(text)\r\n        addvance(text.length)\r\n      }\r\n    }\r\n  }\r\n  return root;\r\n}","// 模版引擎的实现原理，with + new Function\r\nimport { parsHTML } from \"./parse\";\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g     // 表达式{{}}\r\n// 拼接属性\r\nfunction genProps(attrs) {\r\n  let str = '';\r\n  for(let i = 0; i < attrs.length; i ++) {\r\n    let attr = attrs[i];\r\n    if(attr.name === 'style') {\r\n      // color: 'red' => {color: 'red'}\r\n      let obj = {};\r\n      attr.value.split(\";\").forEach(item => {\r\n        let [key, value] = item.split(\":\");\r\n        obj[key] = value;\r\n      })\r\n      attr.value = obj;\r\n    }\r\n    str += `${attr.name}: ${JSON.stringify(attr.value)},`\r\n  }\r\n  return `{${str.slice(0, -1)}}`\r\n}\r\n// 拼接子元素\r\nfunction genChildren(children) {\r\n  if(children) {\r\n    return children.map(child => gen(child)).join(',')\r\n  }\r\n}\r\nfunction gen(node) {\r\n  if(node.type === 1) { // 如果是元素\r\n    return codegen(node);\r\n  } else { // 文本\r\n    let text = node.text;\r\n    if(!defaultTagRE.test(text)){ // 是否是纯文本\r\n      return `_v(${JSON.stringify(text)})`\r\n    } else {\r\n      let tokens = [];\r\n      let match;\r\n      let lastIndex = 0;\r\n      defaultTagRE.lastIndex = 0;\r\n      while(match = defaultTagRE.exec(text)) {\r\n        let index = match.index;\r\n        if(index > lastIndex) {\r\n          tokens.push(JSON.stringify(text.slice(lastIndex, index)))\r\n        }\r\n        tokens.push(`_s(${match[1].trim()})`)\r\n        lastIndex = index + match[0].length;\r\n      }\r\n      if (lastIndex < text.length) {\r\n        tokens.push(JSON.stringify(text.slice(lastIndex)))\r\n      }\r\n      return `_v(${tokens.join(\"+\")})`\r\n    }\r\n  }\r\n}\r\n// sast拼接字符串 _c创建文本  _v创建文本  _s JSON.stringfy()\r\nfunction codegen(ast) {\r\n  let children = genChildren(ast.children)\r\n  let code = (`_c('${ast.tag}', ${\r\n    ast.attrs.length > 0 ? genProps(ast.attrs) : 'null'\r\n  }${\r\n    ast.children.length ? `,${children}` : ''\r\n  })`)\r\n  return code;\r\n}\r\n\r\nexport const compileToFunction = function(template) {\r\n  // 1.将template转化为ast语法树\r\n  // 2.生成render方法，render方法执行后返回的结果就是虚拟DOM\r\n\r\n  let ast = parsHTML(template)\r\n  let code = codegen(ast);\r\n  code = `with(this){return ${code}}`; // with语法，this是谁就在谁上面取\r\n  let render = new Function(code); // 根据代码生成render函数\r\n  return render;\r\n}\r\n","import Dep from \"./dep\";\r\n\r\nlet id = 0;\r\n\r\n// 每个属性有一个dep，属性就是被观察者，watcher就是观察者，属性变化了会通知观察者来更新\r\n// 观察者模式\r\n\r\n// 当我们创建渲染watcher的时候，我们会把当前的渲染watcher放到Dep.target上\r\n// 调用_render方法\r\nclass Watcher {  // 不同组件有不同的watcher\r\n    constructor(vm, fn) {\r\n        this.id = id++;\r\n\r\n        this.getter = fn; // 调用这个函数就会发生取值操作\r\n\r\n        this.deps = []; // watcher记录dep；如组件卸载，清除所有的响应式数据，实现计算属性和清理工作\r\n\r\n        this.depsId = new Set();\r\n        \r\n        this.get()\r\n    }\r\n\r\n    addDep(dep) {  // 一个组件对应多个属性，重复属性不用记录\r\n        let id = dep.id;\r\n        if(!this.depsId.has(id)){\r\n            this.deps.push(dep);\r\n            this.depsId.add(id);\r\n            dep.addSub(this);  // watcher已经记住了dep而且去重，此时让dep也记住watcher\r\n        }\r\n    }\r\n\r\n    get() {\r\n        Dep.target = this; // 静态属性，将组件挂载到dep全局上\r\n        this.getter(); // 触发_render方法，会去vm上取值，\r\n        Dep.target = null; // 渲染完毕后置空，避免vm.xxx取值也进行依赖收集\r\n    }\r\n\r\n    update() {\r\n        queueWatcher(this); // 把当前的watcher暂存起来\r\n    }\r\n    \r\n    run() {\r\n        console.log((\"updata\"));\r\n        this.get()\r\n    }\r\n\r\n    \r\n}\r\n\r\nlet queue = [];\r\nlet has = {};\r\nlet pending = false; // 防抖\r\nfunction queueWatcher(watcher) {\r\n    const id = watcher.id;\r\n    if(!has[id]) {\r\n        queue.push(watcher);\r\n        has[id] = true;\r\n        // 不管updata执行多少次，但是最终刷新操作只执行一次\r\n        if(!pending) {\r\n            nextTick(flushSchedulerQueue,0)\r\n            pending = true;\r\n\r\n        }\r\n    }\r\n}\r\n// 异步更新导致用户取值取到不是最新值\r\nfunction flushSchedulerQueue() {\r\n    let flushQueue = queue.slice(0)\r\n    queue = [];\r\n    has = {};\r\n    pending = false;\r\n    flushQueue.forEach(q => q.run()); \r\n}\r\n\r\nlet callbacks = []\r\nlet waiting = false;\r\n\r\nfunction flushCallbacks() {\r\n    let cbs = callbacks.splice(0);\r\n    waiting = false;\r\n    callbacks = [];\r\n    cbs.forEach(cb => cb());\r\n}\r\n\r\nlet timerFunc;\r\nif(Promise) {\r\n    timerFunc = () => {\r\n        Promise.resolve().then(flushCallbacks)\r\n    }\r\n} else if(MutationObserver) {\r\n    let observe = new MutationObserver(flushCallbacks) // 这里传入的回调是异步执行\r\n    let textNode = document.createTextNode(1)\r\n    observe.observe(textNode, {\r\n        characterData: true\r\n    });\r\n    timerFunc = () => {\r\n        textNode.textContent = 2\r\n    }\r\n} else if (setImmediate) {\r\n    timerFunc = () => {\r\n        setImmediate(flushCallbacks)\r\n    }\r\n} else {\r\n    timerFunc = () => {\r\n        setTimeout(flushCallbacks)\r\n    }\r\n}\r\n// 异步批处理 使用队列(使用变量控制开异步)\r\n// nextTick不是创建一个异步任务，而是将这个任务维护到了队列中\r\n// 没有直接使用某个api，采用优雅降级的方式\r\n// 先采用promise（IE不兼容），MutationObserver(微任务，H5的api)，setImmediate(ie专属)，setTimeout\r\nexport function nextTick(cb) {\r\n    callbacks.push(cb); // 维护nextTick的calback方法\r\n    if(!waiting) {\r\n        timerFunc()\r\n    }\r\n    waiting = true;\r\n}\r\n\r\n// 需要给每个属性增加一个dep，目的是收集watcher（让属性收集他所依赖的watcher）\r\n// 一个组件n个属性对应n的dep，对应一个watcher\r\n// 一个属性可以对应多个组件，一个dep对应多个watcher\r\n// 多对多的关系\r\nexport default Watcher","export function createElementVNode(vm, tag, data = {},...children) {  // h()  _c()\r\n    if (data == null) data = {};\r\n    let key = data.key;\r\n    if(key) {\r\n        delete data.key;\r\n    }\r\n    return vNode(vm,tag,key,data,children)\r\n}\r\n\r\nexport function createTextVNode(vm, text) {  // _v()\r\n    debugger\r\n    return vNode(vm,undefined, undefined, undefined, undefined, text)\r\n}\r\n// ast做的是语法层面的转化，他描述的是语法本身(描述语言本身，js，css，html)\r\n// 但是虚拟dom，描述的是dom元素，可以增加一些自定义属性\r\nfunction vNode(vm,tag,key,data,children,text) {\r\n    debugger\r\n    return {\r\n        vm,\r\n        tag,\r\n        key,\r\n        data,\r\n        children,\r\n        text,\r\n    }\r\n}","// 组件挂载\r\n\r\nimport Watcher from \"./observe/watcher\";\r\nimport { createElementVNode, createTextVNode } from \"./vdom/index\";\r\n\r\nfunction createElm(vNode) {\r\n    let {tag, data, children, text} = vNode;\r\n    if(typeof tag === 'string') {  // 是标签\r\n        // 这里将真实节点和虚拟节点对应起来，后续如果修改属性了，我们可以直接找到虚拟节点对应的真实节点来修改属性\r\n        vNode.el = document.createElement(tag);\r\n        patchProps(vNode.el, data);\r\n        children.forEach(chlid => {\r\n            vNode.el.appendChild(createElm(chlid))\r\n        })\r\n    } else {\r\n        vNode.el = document.createTextNode(text)\r\n    }\r\n    return vNode.el;\r\n}\r\n\r\nfunction patchProps(el, props) {\r\n    for(let key in props) {\r\n        if(key === 'style') {\r\n            for(let styleName in props.style){\r\n                el.style[styleName] = props.style[styleName]\r\n            }\r\n        } else {\r\n            el.setAttribute(key, props[key])\r\n        }\r\n    }\r\n}\r\n\r\nfunction patch(oldVNode, vNode){\r\n    // 初次渲染\r\n    const isRealElement = oldVNode.nodeType; //nodeType是dom原生方法\r\n    if(isRealElement) {\r\n        const elm = oldVNode; // 获取真实元素\r\n        const parentElm = elm.parentNode;  // 拿到父元素\r\n        let newElm = createElm(vNode) // 拿到新的真实dom\r\n        parentElm.insertBefore(newElm, elm.extSibling); // 将新节点插入老节点下方，在删除老节点，避免位置变化\r\n        parentElm.removeChild(elm); // 删除老节点\r\n        return newElm;\r\n    } else {\r\n        // diff算法\r\n    }\r\n}\r\n\r\nexport function initLifeCycle(Vue) {\r\n    Vue.prototype._update = function(vNode) {\r\n        // patch既有初始化的功能，又有更新的逻辑\r\n        const vm = this;\r\n        const el = vm.$el;\r\n        vm.$el = patch(el, vNode)\r\n    }\r\n    // _c('div',{}, ...children)\r\n    Vue.prototype._c = function() {\r\n        debugger\r\n        return createElementVNode(this, ...arguments)\r\n    }\r\n    // _v(text)\r\n    Vue.prototype._v = function() {\r\n        return createTextVNode(this, ...arguments)\r\n    }\r\n    Vue.prototype._s = function(value) {\r\n        if(typeof value !== 'object') return value\r\n        return JSON.stringify(value)\r\n    }\r\n    Vue.prototype._render = function() {\r\n        // 当渲染的时候会去实例中取值，我们就可以将属性和视图绑定在一起\r\n        const vm = this;\r\n        return vm.$options.render.call(vm);\r\n    }\r\n}\r\n\r\nexport function mountComponent(vm, el) {  //这里的的el是通过querySelector处理过的\r\n    vm.$el = el;\r\n    // 1.调用render方法，生成虚拟dom\r\n\r\n    const updateComponent = () => {\r\n        vm._update(vm._render());  // vm.$options.render();返回虚拟节点\r\n    }\r\n\r\n    new Watcher(vm, updateComponent, true) // true标识渲染watcher\r\n    // 2.根据虚拟dom生成真实dom\r\n    // 3.插入到el元素中\r\n}\r\n\r\n\r\n// vue核心流程\r\n// 1.创造了响应式数据\r\n// 2.将模版转化为ast语法树\r\n// 3.将ast语法树转化为render函数； 后续每次数据更新可以只执行render函数，无需再次执行转化过程；render函数会产生虚拟节点（使用响应式数据）\r\n// 4.根据创建的虚拟节点创造真实dom\r\n\r\nexport function callHook(vm, hook) {  // 调用钩子函数\r\n    const handlers = vm.$options[hook];\r\n    if(handlers) {\r\n        handlers.forEach(handler => handler.call(vm))\r\n    }\r\n}","\r\nimport { initState } from './state'\r\nimport { compileToFunction } from './compiler/index'\r\nimport { callHook, mountComponent } from './lifecycle';\r\nimport { mergeOptions } from \"./utils\"\r\n\r\nexport function initMixin(Vue) {  // 给Vue增加init方法\r\n  Vue.prototype._init = function(options) {\r\n    // vue vm.$options  就是获取用户配置   $表示vue自己的，所有以$开头的都认为是自身属性\r\n    const vm = this;\r\n    // 我们定义的全局指令和过滤器都会挂载到实例上\r\n    vm.$options = mergeOptions(this.constructor.options, options);  // 将用户的选项与全局的合并挂载到实例上\r\n\r\n    callHook(vm, 'beforeCreate')\r\n    // 初始化状态\r\n    initState(vm)\r\n    callHook(vm, 'created')\r\n    if(options.el) {\r\n      vm.$mount(options.el)\r\n    }\r\n  }\r\n  Vue.prototype.$mount = function(el) {\r\n    const vm = this;\r\n    el = document.querySelector(el);\r\n    let ops = vm.$options;\r\n    if(!ops.render) {    // 判断用户是否写了render函数\r\n      let template;\r\n      if(!ops.template && el) {   //没有render判断是否写了template,没有template但是有el， 采用外部的template\r\n        template = el.outerHTML;\r\n      } else {\r\n        if(el) {   //  有template就用传入的template\r\n          template = ops.template;\r\n        }\r\n      }\r\n      // 获取到模板后，对模板进行编译\r\n      if(template && el) {\r\n        const render = compileToFunction(template)\r\n        ops.render = render;\r\n      }\r\n    }\r\n\r\n    mountComponent(vm, el)\r\n    ops.render;\r\n  }\r\n}\r\n\r\n","import { initGloablApi } from \"./gloablAPI\"\r\nimport { initMixin } from \"./init\"\r\nimport { initLifeCycle } from \"./lifecycle\"\r\nimport { nextTick } from \"./observe/watcher\"\r\nfunction Vue(options) {  // options  用户选项\r\n  this._init(options)\r\n}\r\nVue.prototype.$nextTick = nextTick\r\ninitMixin(Vue)  // 扩展init方法\r\ninitLifeCycle(Vue)\r\ninitGloablApi(Vue) // mixin方法\r\n\r\nexport default Vue"],"names":["id"],"mappings":"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"}